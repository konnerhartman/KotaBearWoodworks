{"version":3,"sources":["pages/Home.js","pages/About.js","pages/Contact.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","components/Cart/index.js","pages/Gallery.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","assets/KBWW-white.png","components/Nav/index.js","components/Footer/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","About","class","id","name","action","method","type","for","rows","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","products","cartOpen","cart","product","newState","filter","_id","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","idbPromise","storeName","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","image","alt","src","onClick","itemInCart","find","cartItem","purchaseQuantity","parseInt","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","map","spinner","CategoryMenu","categoryData","CartItem","role","removeFromCart","Cart","toggleCart","a","getCart","Gallery","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","hidden","p","description","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","Auth","handleChange","target","onSubmit","htmlFor","placeholder","onChange","Signup","addUser","firstName","lastName","Nav","Logo","loggedIn","href","logout","Footer","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","price","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","Contact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.70914e41.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import Jumbotron from \"../components/Jumbotron\";\n\n\nconst Home = () => {\n  return (\n    <div className=\"jumbotron text-center p-5\">\n      <h1 className=\"display-4\">Hello!</h1>\n      <p className=\"lead\">Welcome to Kota Bear's workshop.</p>\n      <p>Take a look at my gallery to see a few items I have built.</p>\n      <Link className=\"btn btn-primary btn-lg\" to=\"/gallery\">\n        Gallery\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div className=\"about row\">\n      <div className=\"col-6\">\n\n      </div>\n      <aside className=\"p-3 col-6 text-center text-white\">\n        <h2 className=\"p-2\">About Kota Bear Woodworks</h2>\n        <p>My name is Kevin. I have been building with wood since I was a young child. My first jobs were building houses. I've always been a DIYer. As I aged and moved out of the construction business, I always kept at it by doing side projects for friends and family.</p>\n        <p>If you're wondering where the name \"Kota Bear\" comes from...</p>\n      </aside>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div className=\"contact row\">\n      <section class=\"mb-4 text-white\">\n        <div>\n          <div class=\"col-md-6 p-3\">\n            <h2 class=\"h1-responsive font-weight-bold text-center my-4\">Reach Out</h2>\n            <p class=\"text-center w-responsive mx-auto\">Do you have any questions about pricing? Want to discuss custom pieces? Please do not hesitate to contact me directly.</p>\n            <form id=\"contact-form\" name=\"contact-form\" action=\"mail.php\" method=\"POST\">\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"md-form mb-0\">\n                    <input type=\"text\" id=\"name\" name=\"name\" class=\"form-control\" />\n                    <label for=\"name\" class=\"\">Your name</label>\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"md-form mb-0\">\n                    <input type=\"text\" id=\"email\" name=\"email\" class=\"form-control\" />\n                    <label for=\"email\" class=\"\">Your email</label>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"md-form mb-0\">\n                    <input type=\"text\" id=\"subject\" name=\"subject\" class=\"form-control\" />\n                    <label for=\"subject\" class=\"\">Subject</label>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"md-form\">\n                    <textarea type=\"text\" id=\"message\" name=\"message\" rows=\"2\" class=\"form-control md-textarea\"></textarea>\n                    <label for=\"message\">Your message</label>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n      <div className=\"col-6\">\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n      \n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('Kota Bear Woodworks', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card p-2 m-2 d-inline-flex\">\n      <Link to={`/products/${_id}`}>\n        <img\n          className=\"card-img-top\"\n          alt={name}\n          src={`/images/${image}`}\n        />\n      </Link>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{name}</h5>\n        <div className=\"card-text\">Available</div>\n      </div>\n      <button className=\"btn btn-primary\" onClick={addToCart}>Add to favorites</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"mt-2 text-center\">\n      <h2>My Pieces</h2>\n      {state.products.length ? (\n        <div>\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { Link } from 'react-router-dom';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div className='text-center'>\n      <h2>Categories</h2>\n      {categories.map((item) => (\n        <button\n          className=\"btn btn-primary mx-2\"\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  return (\n    <div className=\"d-inline-flex\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}</div>\n        <div>\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import React, { useEffect } from 'react';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n        🤍\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart bg-light\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2 className='px-2 text-center pb-3'>Liked items</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n        </div>\n      ) : (\n        <h3>\n          You haven't liked anything yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Gallery = () => {\n  return (\n    <div className=\"gallery\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <div className='gallery'>\n      {currentProduct && cart ? (\n        <div>\n          <Link to=\"/gallery\">← Back to Products</Link>\n          <div className='text-center'>\n            <div className=''>\n              <h2>{currentProduct.name}</h2>\n              <p className='likeBtn'> Add to Favorites:\n                <button \n                hidden={cart.find((p) => p._id === currentProduct._id)}\n                onClick={addToCart}\n                >\n                  🤍\n                </button>\n                <button\n                  hidden={!cart.find((p) => p._id === currentProduct._id)}\n                  onClick={removeFromCart}\n                >\n                  ❤️\n                </button>\n              </p>\n            </div>\n            <img\n              className='rounded'\n              src={`/images/${currentProduct.image}`}\n              alt={currentProduct.name}\n            />\n\n            <p className='m-0 p-4'>{currentProduct.description}</p>\n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </div>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"login text-white\">\n      <div className='row p-5'>\n        <div className='col-md-3'></div>\n        <div className='text-center col-md-6'>\n          <h2>Login</h2>\n          <p className=''>Login to your account to save/view your favorite pieces from the gallery.</p>\n          <form className='' onSubmit={handleFormSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email address</label>\n              <input\n                className=\"form-control\"\n                placeholder=\"youremail@email.com\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"pwd\">Password</label>\n              <input\n                className=\"form-control\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"pwd\"\n                onChange={handleChange}\n              />\n            </div>\n            {error ? (\n              <div className='rounded m-3 bg-danger font-weight-bold'>\n                <p className=\"text-white\">The provided credentials are incorrect</p>\n              </div>\n            ) : null}\n            <button className=\"btn btn-primary m-2\" type=\"submit\">Submit</button>\n          </form>\n          <p>\n            Don't have an account?\n            <br />\n            <Link className='' to=\"/signup\"><b>Go to Signup</b></Link>\n          </p>\n        </div>\n        <div className='col-md-3'></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"login text-white\">\n      <div className='row p-5'>\n        <div className='col-md-3'></div>\n        <div className='text-center col-md-6'>\n          <h2>Signup</h2>\n          <p className=''>Create an account to save/view your favorite pieces from the gallery.</p>\n          <form onSubmit={handleFormSubmit}>\n            <div className=\"flex-row space-between my-2\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input\n                className=\"text-center form-control\"\n                placeholder=\"First\"\n                name=\"firstName\"\n                type=\"firstName\"\n                id=\"firstName\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"flex-row space-between my-2\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input\n                className=\"text-center form-control\"\n                placeholder=\"Last\"\n                name=\"lastName\"\n                type=\"lastName\"\n                id=\"lastName\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"flex-row space-between my-2\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                className=\"text-center form-control\"\n                placeholder=\"youremail@test.com\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"flex-row space-between my-2\">\n              <label htmlFor=\"pwd\">Password</label>\n              <input\n                className=\"text-center form-control\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"pwd\"\n                onChange={handleChange}\n              />\n            </div>\n            <button className=\"btn btn-primary m-2\" type=\"submit\">Submit</button>\n          </form>\n          <p>\n            Already have an account?\n            <br />\n            <Link className='' to=\"/login\"><b>Go to Login</b></Link>\n          </p>\n        </div>\n        <div className='col-md-3'></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","export default __webpack_public_path__ + \"static/media/KBWW-white.fc3d5820.png\";","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../../assets/KBWW-white.png\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <li className=\"nav-item\">\n          {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n          <a className=\"nav-link text-white\" href=\"/\" onClick={() => Auth.logout()}>\n            Logout\n          </a>\n        </li>\n      );\n    } else {\n      return (\n        <li className=\"nav-item\">\n          <Link className=\"nav-link text-white\" to=\"/login\">\n            Login\n          </Link>\n        </li>\n      );\n    }\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark px-3 py-4\">\n      <div className=\"p-2 justify-content-center\">\n        <img src={Logo} alt=\"Kota Bear Woodworks Logo\" height=\"85px\"></img>\n      </div>\n\n      <div className=\"h1 nav-item p-2\">\n        <Link className=\"text-decoration-none text-white\" to=\"/\">\n        Kota Bear Woodworks\n        </Link>\n      </div>\n      \n      <button className=\"navbar-toggler text-white\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      \n      <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n              <Link className=\"nav-link text-white\" to=\"/about\">\n                About\n              </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/gallery\">\n              Gallery\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/contact\">\n              Contact\n            </Link>\n          </li>\n          {showNavigation()}\n        </ul>\n        \n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n\nfunction Footer() {\nreturn (\n  <div>\n    <footer className=\"text-white sticky-bottom bg-dark\">\n      <div className=\"row px-2 pt-3\">\n        <p className=\"col-6 text-start p-2\">© 2022 Copyright</p>\n        <p className=\"col-6 text-end p-2\">Website built by:\n          <a className=\"text-decoration-none\" href=\"https://github.com/konnerhartman\">Konner Hartman</a>\n        </p>\n      </div>\n      <div className=\"text-end\">\n        \n      </div>\n    </footer>\n  </div>\n  \n)\n};\n\nexport default Footer;","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Gallery from './pages/Gallery';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer'\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/gallery\" component={Gallery} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact\" component={Contact} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n            <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}